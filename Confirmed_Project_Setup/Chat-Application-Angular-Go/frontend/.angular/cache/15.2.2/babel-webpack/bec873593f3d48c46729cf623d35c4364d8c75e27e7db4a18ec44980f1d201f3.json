{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./socket.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AppComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵelement(1, \"span\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.isSystemMessage(message_r1), i0.ɵɵsanitizeHtml);\n  }\n}\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\nexport class AppComponent {\n  constructor(socket) {\n    this.socket = socket;\n    this.messages = [];\n    this.chatBox = \"\";\n  }\n  ngOnInit() {\n    this.socket.getEventListener().subscribe(event => {\n      if (event.type == \"message\") {\n        let data = event.data.content;\n        if (event.data.sender) {\n          data = event.data.sender + \": \" + data;\n        }\n        this.messages.push(data);\n      }\n      if (event.type == \"close\") {\n        this.messages.push(\"/The socket connection has been closed\");\n      }\n      if (event.type == \"open\") {\n        this.messages.push(\"/The socket connection has been established\");\n      }\n    });\n  }\n  ngOnDestroy() {\n    this.socket.close();\n  }\n  send() {\n    if (this.chatBox) {\n      this.socket.send(this.chatBox);\n      this.chatBox = \"\";\n    }\n  }\n  isSystemMessage(message) {\n    return message.startsWith(\"/\") ? \"<strong>\" + message.substring(1) + \"</strong>\" : message;\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.SocketService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 6,\n  vars: 4,\n  consts: [[\"id\", \"messages\"], [4, \"ngFor\", \"ngForOf\"], [\"action\", \"\"], [\"autocomplete\", \"off\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [3, \"click\"], [3, \"innerHTML\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ul\", 0);\n      i0.ɵɵtemplate(1, AppComponent_li_1_Template, 2, 1, \"li\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 2)(3, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.chatBox = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_4_listener() {\n        return ctx.send();\n      });\n      i0.ɵɵtext(5, \"Send\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.chatBox)(\"ngModelOptions\", i0.ɵɵpureFunction0(3, _c0));\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"(()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\t\\\"use strict\\\";\\n \\t\\n \\t\\n })()[_ngcontent-%COMP%]\\n;\", \"[_nghost-%COMP%] {\\n    font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";\\n    font-size: 14px;\\n    color: #333;\\n    box-sizing: border-box;\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n  }\\n\\n  h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%] {\\n    margin: 8px 0;\\n  }\\n\\n  p[_ngcontent-%COMP%] {\\n    margin: 0;\\n  }\\n\\n  .toolbar[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n    margin: 0 16px;\\n  }\\n\\n  .card[_ngcontent-%COMP%]   svg.material-icons[_ngcontent-%COMP%]   path[_ngcontent-%COMP%] {\\n    fill: #888;\\n  }\\n\\n  .card.card.highlight-card[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n    margin-left: 60px;\\n  }\\n\\n  a[_ngcontent-%COMP%], a[_ngcontent-%COMP%]:visited, a[_ngcontent-%COMP%]:hover {\\n    color: #1976d2;\\n    text-decoration: none;\\n  }\\n\\n  a[_ngcontent-%COMP%]:hover {\\n    color: #125699;\\n  }\\n\\n  .terminal[_ngcontent-%COMP%]   pre[_ngcontent-%COMP%] {\\n    font-family: SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;\\n    color: white;\\n    padding: 0 1rem 1rem;\\n    margin: 0;\\n  }\\n\\n  footer[_ngcontent-%COMP%] {\\n    margin-top: 8px;\\n    display: flex;\\n    align-items: center;\\n    line-height: 20px;\\n  }\\n\\n  footer[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n    display: flex;\\n    align-items: center;\\n  }\\n\\n  \\n  @media screen and (max-width: 767px) {\\n    .card.highlight-card[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n      margin-left: 72px;\\n    }\\n  }\"]\n});","map":{"version":3,"mappings":";;;;;;IA0EIA,0BAAqC;IACnCA,0BAAoD;IACtDA,iBAAK;;;;;IADGA,eAAsC;IAAtCA,iFAAsC;;;;;;;;ACnElD,OAAM,MAAOC,YAAY;EAKvBC,YAA2BC,MAAqB;IAArB,WAAM,GAANA,MAAM;IAC/B,IAAI,CAACC,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACC,OAAO,GAAG,EAAE;EACnB;EAEOC,QAAQ;IACb,IAAI,CAACH,MAAM,CAACI,gBAAgB,EAAE,CAACC,SAAS,CAACC,KAAK,IAAG;MAC/C,IAAGA,KAAK,CAACC,IAAI,IAAI,SAAS,EAAE;QAC1B,IAAIC,IAAI,GAAGF,KAAK,CAACE,IAAI,CAACC,OAAO;QAC7B,IAAGH,KAAK,CAACE,IAAI,CAACE,MAAM,EAAE;UACpBF,IAAI,GAAGF,KAAK,CAACE,IAAI,CAACE,MAAM,GAAG,IAAI,GAAGF,IAAI;;QAExC,IAAI,CAACP,QAAQ,CAACU,IAAI,CAACH,IAAI,CAAC;;MAE1B,IAAGF,KAAK,CAACC,IAAI,IAAI,OAAO,EAAE;QACxB,IAAI,CAACN,QAAQ,CAACU,IAAI,CAAC,wCAAwC,CAAC;;MAE9D,IAAGL,KAAK,CAACC,IAAI,IAAI,MAAM,EAAE;QACvB,IAAI,CAACN,QAAQ,CAACU,IAAI,CAAC,6CAA6C,CAAC;;IAErE,CAAC,CAAC;EACJ;EAEOC,WAAW;IAChB,IAAI,CAACZ,MAAM,CAACa,KAAK,EAAE;EACrB;EAEOC,IAAI;IACT,IAAG,IAAI,CAACZ,OAAO,EAAE;MACf,IAAI,CAACF,MAAM,CAACc,IAAI,CAAC,IAAI,CAACZ,OAAO,CAAC;MAC9B,IAAI,CAACA,OAAO,GAAG,EAAE;;EAErB;EAEOa,eAAe,CAACC,OAAe;IACpC,OAAOA,OAAO,CAACC,UAAU,CAAC,GAAG,CAAC,GAAG,UAAU,GAAGD,OAAO,CAACE,SAAS,CAAC,CAAC,CAAC,GAAG,WAAW,GAAGF,OAAO;EAC5F;;AAzCWlB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDiEvB1B,6BAAkB;MAChBA,2DAEK;MACPA,iBAAK;MACLA,+BAAgB;MACPA;QAAA;MAAA,EAAqB;MAA5BA,iBAAwF;MACxFA,iCAAyB;MAAjBA;QAAA,OAAS2B,UAAM;MAAA,EAAC;MAAC3B,oBAAI;MAAAA,iBAAS;;;MANdA,eAAW;MAAXA,sCAAW;MAK5BA,eAAqB;MAArBA,qCAAqB","names":["i0","AppComponent","constructor","socket","messages","chatBox","ngOnInit","getEventListener","subscribe","event","type","data","content","sender","push","ngOnDestroy","close","send","isSystemMessage","message","startsWith","substring","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/abishek/Downloads/Confirmed Project Setup/real-time-chat-app-main/frontend/src/app/app.component.html","/home/abishek/Downloads/Confirmed Project Setup/real-time-chat-app-main/frontend/src/app/app.component.ts"],"sourcesContent":["<style>\n  :host {\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n    font-size: 14px;\n    color: #333;\n    box-sizing: border-box;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin: 8px 0;\n  }\n\n  p {\n    margin: 0;\n  }\n\n  .toolbar img {\n    margin: 0 16px;\n  }\n\n  .card svg.material-icons path {\n    fill: #888;\n  }\n\n  .card.card.highlight-card span {\n    margin-left: 60px;\n  }\n\n  a,\n  a:visited,\n  a:hover {\n    color: #1976d2;\n    text-decoration: none;\n  }\n\n  a:hover {\n    color: #125699;\n  }\n\n  .terminal pre {\n    font-family: SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;\n    color: white;\n    padding: 0 1rem 1rem;\n    margin: 0;\n  }\n\n  footer {\n    margin-top: 8px;\n    display: flex;\n    align-items: center;\n    line-height: 20px;\n  }\n\n  footer a {\n    display: flex;\n    align-items: center;\n  }\n\n  /* Responsive Styles */\n  @media screen and (max-width: 767px) {\n    .card.highlight-card span {\n      margin-left: 72px;\n    }\n  }\n</style>\n\n  <ul id=\"messages\">\n    <li *ngFor=\"let message of messages\">\n      <span [innerHTML]=\"isSystemMessage(message)\"></span>\n    </li>\n  </ul>\n  <form action=\"\">\n    <input [(ngModel)]=\"chatBox\" [ngModelOptions]=\"{standalone: true}\" autocomplete=\"off\" />\n    <button (click)=\"send()\">Send</button>\n  </form>\n\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { SocketService } from \"./socket.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n\n  public messages: Array<any>;\n  public chatBox: string;\n\n  public constructor(private socket: SocketService) {\n    this.messages = [];\n    this.chatBox = \"\";\n  }\n\n  public ngOnInit() {\n    this.socket.getEventListener().subscribe(event => {\n      if(event.type == \"message\") {\n        let data = event.data.content;\n        if(event.data.sender) {\n          data = event.data.sender + \": \" + data;\n        }\n        this.messages.push(data);\n      }\n      if(event.type == \"close\") {\n        this.messages.push(\"/The socket connection has been closed\");\n      }\n      if(event.type == \"open\") {\n        this.messages.push(\"/The socket connection has been established\");\n      }\n    });\n  }\n\n  public ngOnDestroy() {\n    this.socket.close();\n  }\n\n  public send() {\n    if(this.chatBox) {\n      this.socket.send(this.chatBox);\n      this.chatBox = \"\";\n    }\n  }\n\n  public isSystemMessage(message: string) {\n    return message.startsWith(\"/\") ? \"<strong>\" + message.substring(1) + \"</strong>\" : message;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}